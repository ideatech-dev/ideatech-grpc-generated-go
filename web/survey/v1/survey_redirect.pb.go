// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.2
// source: web/survey/v1/survey_redirect.proto

package grpcweb_survey_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SurveyRedirectGetOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyPageRedirectId int32 `protobuf:"varint,1,opt,name=survey_page_redirect_id,json=surveyPageRedirectId,proto3" json:"survey_page_redirect_id,omitempty"`
}

func (x *SurveyRedirectGetOneRequest) Reset() {
	*x = SurveyRedirectGetOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyRedirectGetOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyRedirectGetOneRequest) ProtoMessage() {}

func (x *SurveyRedirectGetOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyRedirectGetOneRequest.ProtoReflect.Descriptor instead.
func (*SurveyRedirectGetOneRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_redirect_proto_rawDescGZIP(), []int{0}
}

func (x *SurveyRedirectGetOneRequest) GetSurveyPageRedirectId() int32 {
	if x != nil {
		return x.SurveyPageRedirectId
	}
	return 0
}

type SurveyRedirectGetOneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyRedirect *SurveyPageRedirect `protobuf:"bytes,1,opt,name=surveyRedirect,proto3" json:"surveyRedirect,omitempty"`
}

func (x *SurveyRedirectGetOneResponse) Reset() {
	*x = SurveyRedirectGetOneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyRedirectGetOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyRedirectGetOneResponse) ProtoMessage() {}

func (x *SurveyRedirectGetOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyRedirectGetOneResponse.ProtoReflect.Descriptor instead.
func (*SurveyRedirectGetOneResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_redirect_proto_rawDescGZIP(), []int{1}
}

func (x *SurveyRedirectGetOneResponse) GetSurveyRedirect() *SurveyPageRedirect {
	if x != nil {
		return x.SurveyRedirect
	}
	return nil
}

type SurveyRedirectCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyPageId int32  `protobuf:"varint,1,opt,name=survey_page_id,json=surveyPageId,proto3" json:"survey_page_id,omitempty"`
	Link         string `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *SurveyRedirectCreateRequest) Reset() {
	*x = SurveyRedirectCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyRedirectCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyRedirectCreateRequest) ProtoMessage() {}

func (x *SurveyRedirectCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyRedirectCreateRequest.ProtoReflect.Descriptor instead.
func (*SurveyRedirectCreateRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_redirect_proto_rawDescGZIP(), []int{2}
}

func (x *SurveyRedirectCreateRequest) GetSurveyPageId() int32 {
	if x != nil {
		return x.SurveyPageId
	}
	return 0
}

func (x *SurveyRedirectCreateRequest) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type SurveyRedirectCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyRedirect *SurveyPageRedirect `protobuf:"bytes,1,opt,name=surveyRedirect,proto3" json:"surveyRedirect,omitempty"`
}

func (x *SurveyRedirectCreateResponse) Reset() {
	*x = SurveyRedirectCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyRedirectCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyRedirectCreateResponse) ProtoMessage() {}

func (x *SurveyRedirectCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyRedirectCreateResponse.ProtoReflect.Descriptor instead.
func (*SurveyRedirectCreateResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_redirect_proto_rawDescGZIP(), []int{3}
}

func (x *SurveyRedirectCreateResponse) GetSurveyRedirect() *SurveyPageRedirect {
	if x != nil {
		return x.SurveyRedirect
	}
	return nil
}

type SurveyRedirectUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyPageRedirectId int32 `protobuf:"varint,1,opt,name=survey_page_redirect_id,json=surveyPageRedirectId,proto3" json:"survey_page_redirect_id,omitempty"`
	// Payloads
	NewLink string `protobuf:"bytes,2,opt,name=new_link,json=newLink,proto3" json:"new_link,omitempty"`
}

func (x *SurveyRedirectUpdateRequest) Reset() {
	*x = SurveyRedirectUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyRedirectUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyRedirectUpdateRequest) ProtoMessage() {}

func (x *SurveyRedirectUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyRedirectUpdateRequest.ProtoReflect.Descriptor instead.
func (*SurveyRedirectUpdateRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_redirect_proto_rawDescGZIP(), []int{4}
}

func (x *SurveyRedirectUpdateRequest) GetSurveyPageRedirectId() int32 {
	if x != nil {
		return x.SurveyPageRedirectId
	}
	return 0
}

func (x *SurveyRedirectUpdateRequest) GetNewLink() string {
	if x != nil {
		return x.NewLink
	}
	return ""
}

type SurveyRedirectUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyRedirect *SurveyPageRedirect `protobuf:"bytes,1,opt,name=surveyRedirect,proto3" json:"surveyRedirect,omitempty"`
}

func (x *SurveyRedirectUpdateResponse) Reset() {
	*x = SurveyRedirectUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyRedirectUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyRedirectUpdateResponse) ProtoMessage() {}

func (x *SurveyRedirectUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyRedirectUpdateResponse.ProtoReflect.Descriptor instead.
func (*SurveyRedirectUpdateResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_redirect_proto_rawDescGZIP(), []int{5}
}

func (x *SurveyRedirectUpdateResponse) GetSurveyRedirect() *SurveyPageRedirect {
	if x != nil {
		return x.SurveyRedirect
	}
	return nil
}

type SurveyRedirectDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyPageRedirectId int32 `protobuf:"varint,1,opt,name=survey_page_redirect_id,json=surveyPageRedirectId,proto3" json:"survey_page_redirect_id,omitempty"`
}

func (x *SurveyRedirectDeleteRequest) Reset() {
	*x = SurveyRedirectDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyRedirectDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyRedirectDeleteRequest) ProtoMessage() {}

func (x *SurveyRedirectDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyRedirectDeleteRequest.ProtoReflect.Descriptor instead.
func (*SurveyRedirectDeleteRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_redirect_proto_rawDescGZIP(), []int{6}
}

func (x *SurveyRedirectDeleteRequest) GetSurveyPageRedirectId() int32 {
	if x != nil {
		return x.SurveyPageRedirectId
	}
	return 0
}

type SurveyRedirectDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SurveyRedirectDeleteResponse) Reset() {
	*x = SurveyRedirectDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyRedirectDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyRedirectDeleteResponse) ProtoMessage() {}

func (x *SurveyRedirectDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_redirect_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyRedirectDeleteResponse.ProtoReflect.Descriptor instead.
func (*SurveyRedirectDeleteResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_redirect_proto_rawDescGZIP(), []int{7}
}

var File_web_survey_v1_survey_redirect_proto protoreflect.FileDescriptor

var file_web_survey_v1_survey_redirect_proto_rawDesc = []byte{
	0x0a, 0x23, 0x77, 0x65, 0x62, 0x2f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x77, 0x65, 0x62, 0x2f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x54, 0x0a, 0x1b, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x17, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x1c, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x52, 0x0e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x22, 0x57, 0x0a, 0x1b, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x69, 0x0a, 0x1c, 0x53, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x73, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x52, 0x0e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x22, 0x6f, 0x0a, 0x1b, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65,
	0x77, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x77, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x69, 0x0a, 0x1c, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x52, 0x0e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x22, 0x54, 0x0a, 0x1b, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x17, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xdb, 0x03, 0x0a, 0x15, 0x53, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6f, 0x0a, 0x14, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x2a, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6f, 0x0a, 0x14, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76,
	0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6f, 0x0a, 0x14, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x14, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x77, 0x65,
	0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76,
	0x65, 0x79, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x54, 0x5a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x69, 0x64, 0x65, 0x61, 0x74, 0x65, 0x63, 0x68, 0x2d, 0x64, 0x65, 0x76, 0x2f,
	0x69, 0x64, 0x65, 0x61, 0x74, 0x65, 0x63, 0x68, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x67, 0x6f, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x77, 0x65, 0x62,
	0x5f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_web_survey_v1_survey_redirect_proto_rawDescOnce sync.Once
	file_web_survey_v1_survey_redirect_proto_rawDescData = file_web_survey_v1_survey_redirect_proto_rawDesc
)

func file_web_survey_v1_survey_redirect_proto_rawDescGZIP() []byte {
	file_web_survey_v1_survey_redirect_proto_rawDescOnce.Do(func() {
		file_web_survey_v1_survey_redirect_proto_rawDescData = protoimpl.X.CompressGZIP(file_web_survey_v1_survey_redirect_proto_rawDescData)
	})
	return file_web_survey_v1_survey_redirect_proto_rawDescData
}

var file_web_survey_v1_survey_redirect_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_web_survey_v1_survey_redirect_proto_goTypes = []interface{}{
	(*SurveyRedirectGetOneRequest)(nil),  // 0: web.survey.v1.SurveyRedirectGetOneRequest
	(*SurveyRedirectGetOneResponse)(nil), // 1: web.survey.v1.SurveyRedirectGetOneResponse
	(*SurveyRedirectCreateRequest)(nil),  // 2: web.survey.v1.SurveyRedirectCreateRequest
	(*SurveyRedirectCreateResponse)(nil), // 3: web.survey.v1.SurveyRedirectCreateResponse
	(*SurveyRedirectUpdateRequest)(nil),  // 4: web.survey.v1.SurveyRedirectUpdateRequest
	(*SurveyRedirectUpdateResponse)(nil), // 5: web.survey.v1.SurveyRedirectUpdateResponse
	(*SurveyRedirectDeleteRequest)(nil),  // 6: web.survey.v1.SurveyRedirectDeleteRequest
	(*SurveyRedirectDeleteResponse)(nil), // 7: web.survey.v1.SurveyRedirectDeleteResponse
	(*SurveyPageRedirect)(nil),           // 8: web.survey.v1.SurveyPageRedirect
}
var file_web_survey_v1_survey_redirect_proto_depIdxs = []int32{
	8, // 0: web.survey.v1.SurveyRedirectGetOneResponse.surveyRedirect:type_name -> web.survey.v1.SurveyPageRedirect
	8, // 1: web.survey.v1.SurveyRedirectCreateResponse.surveyRedirect:type_name -> web.survey.v1.SurveyPageRedirect
	8, // 2: web.survey.v1.SurveyRedirectUpdateResponse.surveyRedirect:type_name -> web.survey.v1.SurveyPageRedirect
	0, // 3: web.survey.v1.SurveyRedirectService.SurveyRedirectGetOne:input_type -> web.survey.v1.SurveyRedirectGetOneRequest
	2, // 4: web.survey.v1.SurveyRedirectService.SurveyRedirectCreate:input_type -> web.survey.v1.SurveyRedirectCreateRequest
	4, // 5: web.survey.v1.SurveyRedirectService.SurveyRedirectUpdate:input_type -> web.survey.v1.SurveyRedirectUpdateRequest
	6, // 6: web.survey.v1.SurveyRedirectService.SurveyRedirectDelete:input_type -> web.survey.v1.SurveyRedirectDeleteRequest
	1, // 7: web.survey.v1.SurveyRedirectService.SurveyRedirectGetOne:output_type -> web.survey.v1.SurveyRedirectGetOneResponse
	3, // 8: web.survey.v1.SurveyRedirectService.SurveyRedirectCreate:output_type -> web.survey.v1.SurveyRedirectCreateResponse
	5, // 9: web.survey.v1.SurveyRedirectService.SurveyRedirectUpdate:output_type -> web.survey.v1.SurveyRedirectUpdateResponse
	7, // 10: web.survey.v1.SurveyRedirectService.SurveyRedirectDelete:output_type -> web.survey.v1.SurveyRedirectDeleteResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_web_survey_v1_survey_redirect_proto_init() }
func file_web_survey_v1_survey_redirect_proto_init() {
	if File_web_survey_v1_survey_redirect_proto != nil {
		return
	}
	file_web_survey_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_web_survey_v1_survey_redirect_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyRedirectGetOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_redirect_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyRedirectGetOneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_redirect_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyRedirectCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_redirect_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyRedirectCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_redirect_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyRedirectUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_redirect_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyRedirectUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_redirect_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyRedirectDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_redirect_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyRedirectDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_web_survey_v1_survey_redirect_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_web_survey_v1_survey_redirect_proto_goTypes,
		DependencyIndexes: file_web_survey_v1_survey_redirect_proto_depIdxs,
		MessageInfos:      file_web_survey_v1_survey_redirect_proto_msgTypes,
	}.Build()
	File_web_survey_v1_survey_redirect_proto = out.File
	file_web_survey_v1_survey_redirect_proto_rawDesc = nil
	file_web_survey_v1_survey_redirect_proto_goTypes = nil
	file_web_survey_v1_survey_redirect_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.15.2
// source: web/survey/v1/survey_question_service.proto

package grpcweb_survey_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QuestionGetOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int32 `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	// Preloads
	WithChoice bool `protobuf:"varint,2,opt,name=with_choice,json=withChoice,proto3" json:"with_choice,omitempty"`
	WithOption bool `protobuf:"varint,3,opt,name=with_option,json=withOption,proto3" json:"with_option,omitempty"`
}

func (x *QuestionGetOneRequest) Reset() {
	*x = QuestionGetOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionGetOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionGetOneRequest) ProtoMessage() {}

func (x *QuestionGetOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionGetOneRequest.ProtoReflect.Descriptor instead.
func (*QuestionGetOneRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{0}
}

func (x *QuestionGetOneRequest) GetQuestionId() int32 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *QuestionGetOneRequest) GetWithChoice() bool {
	if x != nil {
		return x.WithChoice
	}
	return false
}

func (x *QuestionGetOneRequest) GetWithOption() bool {
	if x != nil {
		return x.WithOption
	}
	return false
}

type QuestionGetOneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question *SurveyQuestion `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *QuestionGetOneResponse) Reset() {
	*x = QuestionGetOneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionGetOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionGetOneResponse) ProtoMessage() {}

func (x *QuestionGetOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionGetOneResponse.ProtoReflect.Descriptor instead.
func (*QuestionGetOneResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{1}
}

func (x *QuestionGetOneResponse) GetQuestion() *SurveyQuestion {
	if x != nil {
		return x.Question
	}
	return nil
}

type QuestionGetAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId int32 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	// Preloads
	WithChoice bool `protobuf:"varint,2,opt,name=with_choice,json=withChoice,proto3" json:"with_choice,omitempty"`
	WithOption bool `protobuf:"varint,3,opt,name=with_option,json=withOption,proto3" json:"with_option,omitempty"`
}

func (x *QuestionGetAllRequest) Reset() {
	*x = QuestionGetAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionGetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionGetAllRequest) ProtoMessage() {}

func (x *QuestionGetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionGetAllRequest.ProtoReflect.Descriptor instead.
func (*QuestionGetAllRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{2}
}

func (x *QuestionGetAllRequest) GetPageId() int32 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *QuestionGetAllRequest) GetWithChoice() bool {
	if x != nil {
		return x.WithChoice
	}
	return false
}

func (x *QuestionGetAllRequest) GetWithOption() bool {
	if x != nil {
		return x.WithOption
	}
	return false
}

type QuestionGetAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*SurveyQuestion `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *QuestionGetAllResponse) Reset() {
	*x = QuestionGetAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionGetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionGetAllResponse) ProtoMessage() {}

func (x *QuestionGetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionGetAllResponse.ProtoReflect.Descriptor instead.
func (*QuestionGetAllResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{3}
}

func (x *QuestionGetAllResponse) GetQuestions() []*SurveyQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type QuestionCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId int32 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	// Payloads
	Question string             `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Type     SurveyQuestionType `protobuf:"varint,3,opt,name=type,proto3,enum=web.survey.v1.SurveyQuestionType" json:"type,omitempty"`
}

func (x *QuestionCreateRequest) Reset() {
	*x = QuestionCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionCreateRequest) ProtoMessage() {}

func (x *QuestionCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionCreateRequest.ProtoReflect.Descriptor instead.
func (*QuestionCreateRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{4}
}

func (x *QuestionCreateRequest) GetPageId() int32 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *QuestionCreateRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *QuestionCreateRequest) GetType() SurveyQuestionType {
	if x != nil {
		return x.Type
	}
	return SurveyQuestionType_QUESTION_MODE_TEXT_UNSPECIFIED
}

type QuestionCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question *SurveyQuestion `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *QuestionCreateResponse) Reset() {
	*x = QuestionCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionCreateResponse) ProtoMessage() {}

func (x *QuestionCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionCreateResponse.ProtoReflect.Descriptor instead.
func (*QuestionCreateResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{5}
}

func (x *QuestionCreateResponse) GetQuestion() *SurveyQuestion {
	if x != nil {
		return x.Question
	}
	return nil
}

type QuestionUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int32 `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	// Payloads
	NewQuestion string                `protobuf:"bytes,2,opt,name=new_question,json=newQuestion,proto3" json:"new_question,omitempty"`
	NewType     SurveyQuestionType    `protobuf:"varint,3,opt,name=new_type,json=newType,proto3,enum=web.survey.v1.SurveyQuestionType" json:"new_type,omitempty"`
	NewOption   *SurveyQuestionOption `protobuf:"bytes,4,opt,name=new_option,json=newOption,proto3" json:"new_option,omitempty"`
}

func (x *QuestionUpdateRequest) Reset() {
	*x = QuestionUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionUpdateRequest) ProtoMessage() {}

func (x *QuestionUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionUpdateRequest.ProtoReflect.Descriptor instead.
func (*QuestionUpdateRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{6}
}

func (x *QuestionUpdateRequest) GetQuestionId() int32 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *QuestionUpdateRequest) GetNewQuestion() string {
	if x != nil {
		return x.NewQuestion
	}
	return ""
}

func (x *QuestionUpdateRequest) GetNewType() SurveyQuestionType {
	if x != nil {
		return x.NewType
	}
	return SurveyQuestionType_QUESTION_MODE_TEXT_UNSPECIFIED
}

func (x *QuestionUpdateRequest) GetNewOption() *SurveyQuestionOption {
	if x != nil {
		return x.NewOption
	}
	return nil
}

type QuestionUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question *SurveyQuestion `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *QuestionUpdateResponse) Reset() {
	*x = QuestionUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionUpdateResponse) ProtoMessage() {}

func (x *QuestionUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionUpdateResponse.ProtoReflect.Descriptor instead.
func (*QuestionUpdateResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{7}
}

func (x *QuestionUpdateResponse) GetQuestion() *SurveyQuestion {
	if x != nil {
		return x.Question
	}
	return nil
}

type QuestionDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int32 `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
}

func (x *QuestionDeleteRequest) Reset() {
	*x = QuestionDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionDeleteRequest) ProtoMessage() {}

func (x *QuestionDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionDeleteRequest.ProtoReflect.Descriptor instead.
func (*QuestionDeleteRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{8}
}

func (x *QuestionDeleteRequest) GetQuestionId() int32 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

type QuestionDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QuestionDeleteResponse) Reset() {
	*x = QuestionDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionDeleteResponse) ProtoMessage() {}

func (x *QuestionDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionDeleteResponse.ProtoReflect.Descriptor instead.
func (*QuestionDeleteResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{9}
}

type ChoiceGetAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int32 `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
}

func (x *ChoiceGetAllRequest) Reset() {
	*x = ChoiceGetAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChoiceGetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceGetAllRequest) ProtoMessage() {}

func (x *ChoiceGetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoiceGetAllRequest.ProtoReflect.Descriptor instead.
func (*ChoiceGetAllRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{10}
}

func (x *ChoiceGetAllRequest) GetQuestionId() int32 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

type ChoiceGetAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choices []*SurveyChoice `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *ChoiceGetAllResponse) Reset() {
	*x = ChoiceGetAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChoiceGetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceGetAllResponse) ProtoMessage() {}

func (x *ChoiceGetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoiceGetAllResponse.ProtoReflect.Descriptor instead.
func (*ChoiceGetAllResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{11}
}

func (x *ChoiceGetAllResponse) GetChoices() []*SurveyChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

type ChoiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyQuestionId int32 `protobuf:"varint,1,opt,name=survey_question_id,json=surveyQuestionId,proto3" json:"survey_question_id,omitempty"`
	// Payloads
	Choice string `protobuf:"bytes,2,opt,name=choice,proto3" json:"choice,omitempty"`
	Score  int32  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *ChoiceCreateRequest) Reset() {
	*x = ChoiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChoiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceCreateRequest) ProtoMessage() {}

func (x *ChoiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoiceCreateRequest.ProtoReflect.Descriptor instead.
func (*ChoiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{12}
}

func (x *ChoiceCreateRequest) GetSurveyQuestionId() int32 {
	if x != nil {
		return x.SurveyQuestionId
	}
	return 0
}

func (x *ChoiceCreateRequest) GetChoice() string {
	if x != nil {
		return x.Choice
	}
	return ""
}

func (x *ChoiceCreateRequest) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type ChoiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choice *SurveyChoice `protobuf:"bytes,1,opt,name=choice,proto3" json:"choice,omitempty"`
}

func (x *ChoiceCreateResponse) Reset() {
	*x = ChoiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChoiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceCreateResponse) ProtoMessage() {}

func (x *ChoiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoiceCreateResponse.ProtoReflect.Descriptor instead.
func (*ChoiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{13}
}

func (x *ChoiceCreateResponse) GetChoice() *SurveyChoice {
	if x != nil {
		return x.Choice
	}
	return nil
}

type ChoiceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChoiceId int32 `protobuf:"varint,1,opt,name=choice_id,json=choiceId,proto3" json:"choice_id,omitempty"`
	// Payloads
	Choice string `protobuf:"bytes,2,opt,name=choice,proto3" json:"choice,omitempty"`
	Score  int32  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *ChoiceUpdateRequest) Reset() {
	*x = ChoiceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChoiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceUpdateRequest) ProtoMessage() {}

func (x *ChoiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*ChoiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{14}
}

func (x *ChoiceUpdateRequest) GetChoiceId() int32 {
	if x != nil {
		return x.ChoiceId
	}
	return 0
}

func (x *ChoiceUpdateRequest) GetChoice() string {
	if x != nil {
		return x.Choice
	}
	return ""
}

func (x *ChoiceUpdateRequest) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type ChoiceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choice *SurveyChoice `protobuf:"bytes,1,opt,name=choice,proto3" json:"choice,omitempty"`
}

func (x *ChoiceUpdateResponse) Reset() {
	*x = ChoiceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChoiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceUpdateResponse) ProtoMessage() {}

func (x *ChoiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*ChoiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{15}
}

func (x *ChoiceUpdateResponse) GetChoice() *SurveyChoice {
	if x != nil {
		return x.Choice
	}
	return nil
}

type ChoiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChoiceId int32 `protobuf:"varint,1,opt,name=choice_id,json=choiceId,proto3" json:"choice_id,omitempty"`
}

func (x *ChoiceDeleteRequest) Reset() {
	*x = ChoiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChoiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceDeleteRequest) ProtoMessage() {}

func (x *ChoiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*ChoiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{16}
}

func (x *ChoiceDeleteRequest) GetChoiceId() int32 {
	if x != nil {
		return x.ChoiceId
	}
	return 0
}

type ChoiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChoiceDeleteResponse) Reset() {
	*x = ChoiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChoiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceDeleteResponse) ProtoMessage() {}

func (x *ChoiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_survey_v1_survey_question_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*ChoiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_web_survey_v1_survey_question_service_proto_rawDescGZIP(), []int{17}
}

var File_web_survey_v1_survey_question_service_proto protoreflect.FileDescriptor

var file_web_survey_v1_survey_question_service_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x77, 0x65, 0x62, 0x2f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x77,
	0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x77, 0x65,
	0x62, 0x2f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x16,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x16, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76,
	0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdd,
	0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77,
	0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x08,
	0x6e, 0x65, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x6e, 0x65,
	0x77, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53,
	0x0a, 0x16, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x18, 0x0a,
	0x16, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x13, 0x43, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x4d, 0x0a, 0x14, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0x71,
	0x0a, 0x13, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x22, 0x4b, 0x0a, 0x14, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x60,
	0x0a, 0x13, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x22, 0x4b, 0x0a, 0x14, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x32, 0x0a,
	0x13, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd6, 0x06, 0x0a, 0x15, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76,
	0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x77, 0x65,
	0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x12, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5d, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5d, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x0c, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x22,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x43, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x65,
	0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x0c, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x77, 0x65, 0x62, 0x2e, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x54, 0x5a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x69, 0x64, 0x65, 0x61, 0x74, 0x65, 0x63, 0x68, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x69, 0x64,
	0x65, 0x61, 0x74, 0x65, 0x63, 0x68, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x67, 0x6f, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x73, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x77, 0x65, 0x62, 0x5f, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_web_survey_v1_survey_question_service_proto_rawDescOnce sync.Once
	file_web_survey_v1_survey_question_service_proto_rawDescData = file_web_survey_v1_survey_question_service_proto_rawDesc
)

func file_web_survey_v1_survey_question_service_proto_rawDescGZIP() []byte {
	file_web_survey_v1_survey_question_service_proto_rawDescOnce.Do(func() {
		file_web_survey_v1_survey_question_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_web_survey_v1_survey_question_service_proto_rawDescData)
	})
	return file_web_survey_v1_survey_question_service_proto_rawDescData
}

var file_web_survey_v1_survey_question_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_web_survey_v1_survey_question_service_proto_goTypes = []interface{}{
	(*QuestionGetOneRequest)(nil),  // 0: web.survey.v1.QuestionGetOneRequest
	(*QuestionGetOneResponse)(nil), // 1: web.survey.v1.QuestionGetOneResponse
	(*QuestionGetAllRequest)(nil),  // 2: web.survey.v1.QuestionGetAllRequest
	(*QuestionGetAllResponse)(nil), // 3: web.survey.v1.QuestionGetAllResponse
	(*QuestionCreateRequest)(nil),  // 4: web.survey.v1.QuestionCreateRequest
	(*QuestionCreateResponse)(nil), // 5: web.survey.v1.QuestionCreateResponse
	(*QuestionUpdateRequest)(nil),  // 6: web.survey.v1.QuestionUpdateRequest
	(*QuestionUpdateResponse)(nil), // 7: web.survey.v1.QuestionUpdateResponse
	(*QuestionDeleteRequest)(nil),  // 8: web.survey.v1.QuestionDeleteRequest
	(*QuestionDeleteResponse)(nil), // 9: web.survey.v1.QuestionDeleteResponse
	(*ChoiceGetAllRequest)(nil),    // 10: web.survey.v1.ChoiceGetAllRequest
	(*ChoiceGetAllResponse)(nil),   // 11: web.survey.v1.ChoiceGetAllResponse
	(*ChoiceCreateRequest)(nil),    // 12: web.survey.v1.ChoiceCreateRequest
	(*ChoiceCreateResponse)(nil),   // 13: web.survey.v1.ChoiceCreateResponse
	(*ChoiceUpdateRequest)(nil),    // 14: web.survey.v1.ChoiceUpdateRequest
	(*ChoiceUpdateResponse)(nil),   // 15: web.survey.v1.ChoiceUpdateResponse
	(*ChoiceDeleteRequest)(nil),    // 16: web.survey.v1.ChoiceDeleteRequest
	(*ChoiceDeleteResponse)(nil),   // 17: web.survey.v1.ChoiceDeleteResponse
	(*SurveyQuestion)(nil),         // 18: web.survey.v1.SurveyQuestion
	(SurveyQuestionType)(0),        // 19: web.survey.v1.SurveyQuestionType
	(*SurveyQuestionOption)(nil),   // 20: web.survey.v1.SurveyQuestionOption
	(*SurveyChoice)(nil),           // 21: web.survey.v1.SurveyChoice
}
var file_web_survey_v1_survey_question_service_proto_depIdxs = []int32{
	18, // 0: web.survey.v1.QuestionGetOneResponse.question:type_name -> web.survey.v1.SurveyQuestion
	18, // 1: web.survey.v1.QuestionGetAllResponse.questions:type_name -> web.survey.v1.SurveyQuestion
	19, // 2: web.survey.v1.QuestionCreateRequest.type:type_name -> web.survey.v1.SurveyQuestionType
	18, // 3: web.survey.v1.QuestionCreateResponse.question:type_name -> web.survey.v1.SurveyQuestion
	19, // 4: web.survey.v1.QuestionUpdateRequest.new_type:type_name -> web.survey.v1.SurveyQuestionType
	20, // 5: web.survey.v1.QuestionUpdateRequest.new_option:type_name -> web.survey.v1.SurveyQuestionOption
	18, // 6: web.survey.v1.QuestionUpdateResponse.question:type_name -> web.survey.v1.SurveyQuestion
	21, // 7: web.survey.v1.ChoiceGetAllResponse.choices:type_name -> web.survey.v1.SurveyChoice
	21, // 8: web.survey.v1.ChoiceCreateResponse.choice:type_name -> web.survey.v1.SurveyChoice
	21, // 9: web.survey.v1.ChoiceUpdateResponse.choice:type_name -> web.survey.v1.SurveyChoice
	0,  // 10: web.survey.v1.SurveyQuestionService.QuestionGetOne:input_type -> web.survey.v1.QuestionGetOneRequest
	2,  // 11: web.survey.v1.SurveyQuestionService.QuestionGetAll:input_type -> web.survey.v1.QuestionGetAllRequest
	4,  // 12: web.survey.v1.SurveyQuestionService.QuestionCreate:input_type -> web.survey.v1.QuestionCreateRequest
	6,  // 13: web.survey.v1.SurveyQuestionService.QuestionUpdate:input_type -> web.survey.v1.QuestionUpdateRequest
	8,  // 14: web.survey.v1.SurveyQuestionService.QuestionDelete:input_type -> web.survey.v1.QuestionDeleteRequest
	10, // 15: web.survey.v1.SurveyQuestionService.ChoiceGetAll:input_type -> web.survey.v1.ChoiceGetAllRequest
	12, // 16: web.survey.v1.SurveyQuestionService.ChoiceCreate:input_type -> web.survey.v1.ChoiceCreateRequest
	14, // 17: web.survey.v1.SurveyQuestionService.ChoiceUpdate:input_type -> web.survey.v1.ChoiceUpdateRequest
	16, // 18: web.survey.v1.SurveyQuestionService.ChoiceDelete:input_type -> web.survey.v1.ChoiceDeleteRequest
	1,  // 19: web.survey.v1.SurveyQuestionService.QuestionGetOne:output_type -> web.survey.v1.QuestionGetOneResponse
	3,  // 20: web.survey.v1.SurveyQuestionService.QuestionGetAll:output_type -> web.survey.v1.QuestionGetAllResponse
	5,  // 21: web.survey.v1.SurveyQuestionService.QuestionCreate:output_type -> web.survey.v1.QuestionCreateResponse
	7,  // 22: web.survey.v1.SurveyQuestionService.QuestionUpdate:output_type -> web.survey.v1.QuestionUpdateResponse
	9,  // 23: web.survey.v1.SurveyQuestionService.QuestionDelete:output_type -> web.survey.v1.QuestionDeleteResponse
	11, // 24: web.survey.v1.SurveyQuestionService.ChoiceGetAll:output_type -> web.survey.v1.ChoiceGetAllResponse
	13, // 25: web.survey.v1.SurveyQuestionService.ChoiceCreate:output_type -> web.survey.v1.ChoiceCreateResponse
	15, // 26: web.survey.v1.SurveyQuestionService.ChoiceUpdate:output_type -> web.survey.v1.ChoiceUpdateResponse
	17, // 27: web.survey.v1.SurveyQuestionService.ChoiceDelete:output_type -> web.survey.v1.ChoiceDeleteResponse
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_web_survey_v1_survey_question_service_proto_init() }
func file_web_survey_v1_survey_question_service_proto_init() {
	if File_web_survey_v1_survey_question_service_proto != nil {
		return
	}
	file_web_survey_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_web_survey_v1_survey_question_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionGetOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionGetOneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionGetAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionGetAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChoiceGetAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChoiceGetAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChoiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChoiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChoiceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChoiceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChoiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_survey_v1_survey_question_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChoiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_web_survey_v1_survey_question_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_web_survey_v1_survey_question_service_proto_goTypes,
		DependencyIndexes: file_web_survey_v1_survey_question_service_proto_depIdxs,
		MessageInfos:      file_web_survey_v1_survey_question_service_proto_msgTypes,
	}.Build()
	File_web_survey_v1_survey_question_service_proto = out.File
	file_web_survey_v1_survey_question_service_proto_rawDesc = nil
	file_web_survey_v1_survey_question_service_proto_goTypes = nil
	file_web_survey_v1_survey_question_service_proto_depIdxs = nil
}
